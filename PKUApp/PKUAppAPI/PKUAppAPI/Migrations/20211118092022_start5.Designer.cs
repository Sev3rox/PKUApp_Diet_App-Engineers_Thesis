// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PKUAppAPI.Data;

namespace PKUAppAPI.Migrations
{
    [DbContext(typeof(PKUAppDbContext))]
    [Migration("20211118092022_start5")]
    partial class start5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "d318a720-1017-4703-98cf-44954069d6e5",
                            RoleId = "8923e08e-d84a-4d9c-aa85-7f45e356c0ec"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PKUAppAPI.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            Calories = 45000,
                            Name = "Running"
                        },
                        new
                        {
                            ExerciseId = 2,
                            Calories = 90000,
                            Name = "Swimming"
                        },
                        new
                        {
                            ExerciseId = 3,
                            Calories = 41500,
                            Name = "Road Biking"
                        },
                        new
                        {
                            ExerciseId = 4,
                            Calories = 48000,
                            Name = "Dance"
                        },
                        new
                        {
                            ExerciseId = 5,
                            Calories = 56000,
                            Name = "Jumping Rope"
                        },
                        new
                        {
                            ExerciseId = 6,
                            Calories = 14000,
                            Name = "Walking"
                        },
                        new
                        {
                            ExerciseId = 7,
                            Calories = 58000,
                            Name = "Stair Treadmill"
                        },
                        new
                        {
                            ExerciseId = 8,
                            Calories = 18000,
                            Name = "Stationary Cycling"
                        },
                        new
                        {
                            ExerciseId = 9,
                            Calories = 9000,
                            Name = "Stretching"
                        },
                        new
                        {
                            ExerciseId = 10,
                            Calories = 13000,
                            Name = "Calisthenics"
                        },
                        new
                        {
                            ExerciseId = 11,
                            Calories = 14000,
                            Name = "Treadmill Walking"
                        },
                        new
                        {
                            ExerciseId = 12,
                            Calories = 24000,
                            Name = "Circuit Training"
                        },
                        new
                        {
                            ExerciseId = 13,
                            Calories = 13000,
                            Name = "Exercise Ball"
                        },
                        new
                        {
                            ExerciseId = 14,
                            Calories = 16000,
                            Name = "Sailing"
                        },
                        new
                        {
                            ExerciseId = 15,
                            Calories = 32000,
                            Name = "Badminton"
                        },
                        new
                        {
                            ExerciseId = 16,
                            Calories = 18000,
                            Name = "Golf"
                        },
                        new
                        {
                            ExerciseId = 17,
                            Calories = 20000,
                            Name = "Gymnastics"
                        },
                        new
                        {
                            ExerciseId = 18,
                            Calories = 43000,
                            Name = "Roller Skating"
                        },
                        new
                        {
                            ExerciseId = 19,
                            Calories = 32000,
                            Name = "Skating"
                        },
                        new
                        {
                            ExerciseId = 20,
                            Calories = 41500,
                            Name = "Ski Touring"
                        },
                        new
                        {
                            ExerciseId = 21,
                            Calories = 50000,
                            Name = "Polo"
                        },
                        new
                        {
                            ExerciseId = 22,
                            Calories = 45000,
                            Name = "Squash"
                        },
                        new
                        {
                            ExerciseId = 23,
                            Calories = 28500,
                            Name = "Tennis"
                        },
                        new
                        {
                            ExerciseId = 24,
                            Calories = 21500,
                            Name = "Table Tennis"
                        },
                        new
                        {
                            ExerciseId = 25,
                            Calories = 14000,
                            Name = "Frisbee"
                        },
                        new
                        {
                            ExerciseId = 26,
                            Calories = 22000,
                            Name = "Valleyball"
                        },
                        new
                        {
                            ExerciseId = 27,
                            Calories = 50000,
                            Name = "Beach Valleyball"
                        },
                        new
                        {
                            ExerciseId = 28,
                            Calories = 25000,
                            Name = "Basketball"
                        },
                        new
                        {
                            ExerciseId = 29,
                            Calories = 36000,
                            Name = "Cheerleading"
                        },
                        new
                        {
                            ExerciseId = 30,
                            Calories = 50000,
                            Name = "Lacrosse"
                        },
                        new
                        {
                            ExerciseId = 31,
                            Calories = 50000,
                            Name = "Handball"
                        },
                        new
                        {
                            ExerciseId = 32,
                            Calories = 50000,
                            Name = "Hockey"
                        },
                        new
                        {
                            ExerciseId = 33,
                            Calories = 43000,
                            Name = "Football"
                        },
                        new
                        {
                            ExerciseId = 34,
                            Calories = 27000,
                            Name = "Cricket"
                        },
                        new
                        {
                            ExerciseId = 35,
                            Calories = 38000,
                            Name = "Rugby"
                        },
                        new
                        {
                            ExerciseId = 36,
                            Calories = 25000,
                            Name = "Baseball"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MealId");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            MealId = 1,
                            Date = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 2,
                            Date = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 3,
                            Date = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Third Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 4,
                            Date = new DateTime(2021, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 5,
                            Date = new DateTime(2021, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 6,
                            Date = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 7,
                            Date = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 8,
                            Date = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Third Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 9,
                            Date = new DateTime(2021, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 10,
                            Date = new DateTime(2021, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 11,
                            Date = new DateTime(2021, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 12,
                            Date = new DateTime(2021, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 13,
                            Date = new DateTime(2021, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Third Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 14,
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 15,
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 16,
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Third Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 17,
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fourth Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 18,
                            Date = new DateTime(2021, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 19,
                            Date = new DateTime(2021, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 20,
                            Date = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 21,
                            Date = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 22,
                            Date = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Third Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 23,
                            Date = new DateTime(2021, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 24,
                            Date = new DateTime(2021, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 25,
                            Date = new DateTime(2021, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 26,
                            Date = new DateTime(2021, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 27,
                            Date = new DateTime(2021, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 28,
                            Date = new DateTime(2021, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 29,
                            Date = new DateTime(2021, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Third Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 30,
                            Date = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 31,
                            Date = new DateTime(2021, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 32,
                            Date = new DateTime(2021, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 33,
                            Date = new DateTime(2021, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 34,
                            Date = new DateTime(2021, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 35,
                            Date = new DateTime(2021, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            MealId = 36,
                            Date = new DateTime(2021, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Meal",
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.MealProduct", b =>
                {
                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("MealId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("MealProducts");

                    b.HasData(
                        new
                        {
                            MealId = 1,
                            ProductId = 38,
                            Weight = 45000
                        },
                        new
                        {
                            MealId = 2,
                            ProductId = 40,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 3,
                            ProductId = 43,
                            Weight = 30000
                        },
                        new
                        {
                            MealId = 4,
                            ProductId = 25,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 4,
                            ProductId = 4,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 5,
                            ProductId = 2,
                            Weight = 20000
                        },
                        new
                        {
                            MealId = 5,
                            ProductId = 12,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 6,
                            ProductId = 1,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 6,
                            ProductId = 3,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 6,
                            ProductId = 5,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 7,
                            ProductId = 42,
                            Weight = 36000
                        },
                        new
                        {
                            MealId = 8,
                            ProductId = 6,
                            Weight = 20000
                        },
                        new
                        {
                            MealId = 8,
                            ProductId = 50,
                            Weight = 8000
                        },
                        new
                        {
                            MealId = 8,
                            ProductId = 10,
                            Weight = 35000
                        },
                        new
                        {
                            MealId = 9,
                            ProductId = 21,
                            Weight = 20000
                        },
                        new
                        {
                            MealId = 9,
                            ProductId = 101,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 10,
                            ProductId = 33,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 10,
                            ProductId = 32,
                            Weight = 20000
                        },
                        new
                        {
                            MealId = 11,
                            ProductId = 39,
                            Weight = 35000
                        },
                        new
                        {
                            MealId = 12,
                            ProductId = 28,
                            Weight = 8000
                        },
                        new
                        {
                            MealId = 12,
                            ProductId = 36,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 12,
                            ProductId = 105,
                            Weight = 5000
                        },
                        new
                        {
                            MealId = 13,
                            ProductId = 107,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 13,
                            ProductId = 37,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 14,
                            ProductId = 31,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 14,
                            ProductId = 24,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 15,
                            ProductId = 41,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 15,
                            ProductId = 31,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 16,
                            ProductId = 4,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 16,
                            ProductId = 46,
                            Weight = 3000
                        },
                        new
                        {
                            MealId = 16,
                            ProductId = 49,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 17,
                            ProductId = 40,
                            Weight = 28000
                        },
                        new
                        {
                            MealId = 18,
                            ProductId = 40,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 18,
                            ProductId = 32,
                            Weight = 5000
                        },
                        new
                        {
                            MealId = 19,
                            ProductId = 40,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 19,
                            ProductId = 32,
                            Weight = 5000
                        },
                        new
                        {
                            MealId = 20,
                            ProductId = 31,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 20,
                            ProductId = 24,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 21,
                            ProductId = 28,
                            Weight = 8000
                        },
                        new
                        {
                            MealId = 21,
                            ProductId = 36,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 21,
                            ProductId = 105,
                            Weight = 5000
                        },
                        new
                        {
                            MealId = 22,
                            ProductId = 38,
                            Weight = 45000
                        },
                        new
                        {
                            MealId = 23,
                            ProductId = 107,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 23,
                            ProductId = 37,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 24,
                            ProductId = 6,
                            Weight = 20000
                        },
                        new
                        {
                            MealId = 24,
                            ProductId = 50,
                            Weight = 8000
                        },
                        new
                        {
                            MealId = 24,
                            ProductId = 10,
                            Weight = 35000
                        },
                        new
                        {
                            MealId = 25,
                            ProductId = 4,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 25,
                            ProductId = 46,
                            Weight = 3000
                        },
                        new
                        {
                            MealId = 25,
                            ProductId = 49,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 26,
                            ProductId = 41,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 26,
                            ProductId = 31,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 27,
                            ProductId = 31,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 27,
                            ProductId = 24,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 28,
                            ProductId = 43,
                            Weight = 30000
                        },
                        new
                        {
                            MealId = 29,
                            ProductId = 21,
                            Weight = 20000
                        },
                        new
                        {
                            MealId = 29,
                            ProductId = 101,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 30,
                            ProductId = 31,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 30,
                            ProductId = 24,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 31,
                            ProductId = 31,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 31,
                            ProductId = 24,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 32,
                            ProductId = 4,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 32,
                            ProductId = 46,
                            Weight = 3000
                        },
                        new
                        {
                            MealId = 32,
                            ProductId = 49,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 33,
                            ProductId = 31,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 33,
                            ProductId = 24,
                            Weight = 18000
                        },
                        new
                        {
                            MealId = 34,
                            ProductId = 107,
                            Weight = 10000
                        },
                        new
                        {
                            MealId = 34,
                            ProductId = 37,
                            Weight = 15000
                        },
                        new
                        {
                            MealId = 35,
                            ProductId = 2,
                            Weight = 20000
                        },
                        new
                        {
                            MealId = 35,
                            ProductId = 12,
                            Weight = 25000
                        },
                        new
                        {
                            MealId = 36,
                            ProductId = 43,
                            Weight = 30000
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Carb")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phe")
                        .HasColumnType("int");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Calories = 5200,
                            Carb = 1400,
                            Category = "Fruits",
                            Fat = 0,
                            Name = "Apple",
                            Phe = 600,
                            Protein = 30
                        },
                        new
                        {
                            ProductId = 2,
                            Calories = 14300,
                            Carb = 100,
                            Category = "Protein Foods",
                            Fat = 1000,
                            Name = "Egg",
                            Phe = 68000,
                            Protein = 1260
                        },
                        new
                        {
                            ProductId = 3,
                            Calories = 6300,
                            Carb = 1600,
                            Category = "Fruits",
                            Fat = 0,
                            Name = "Orange",
                            Phe = 4300,
                            Protein = 130
                        },
                        new
                        {
                            ProductId = 4,
                            Calories = 27000,
                            Carb = 4900,
                            Category = "Grains",
                            Fat = 300,
                            Name = "Wheat Bread",
                            Phe = 26500,
                            Protein = 1040
                        },
                        new
                        {
                            ProductId = 5,
                            Calories = 8900,
                            Carb = 2300,
                            Category = "Fruits",
                            Fat = 0,
                            Name = "Bananas",
                            Phe = 4900,
                            Protein = 110
                        },
                        new
                        {
                            ProductId = 6,
                            Calories = 6100,
                            Carb = 500,
                            Category = "Dairy",
                            Fat = 300,
                            Name = "Milk 3.2%",
                            Phe = 16300,
                            Protein = 320
                        },
                        new
                        {
                            ProductId = 7,
                            Calories = 38900,
                            Carb = 10000,
                            Category = "Other",
                            Fat = 0,
                            Name = "Sugar",
                            Phe = 0,
                            Protein = 0
                        },
                        new
                        {
                            ProductId = 8,
                            Calories = 1600,
                            Carb = 300,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Tomatoes",
                            Phe = 3000,
                            Protein = 120
                        },
                        new
                        {
                            ProductId = 9,
                            Calories = 37000,
                            Carb = 8200,
                            Category = "Grains",
                            Fat = 100,
                            Name = "Rice",
                            Phe = 36400,
                            Protein = 680
                        },
                        new
                        {
                            ProductId = 10,
                            Calories = 8600,
                            Carb = 2000,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Potatoes",
                            Phe = 7600,
                            Protein = 170
                        },
                        new
                        {
                            ProductId = 11,
                            Calories = 1500,
                            Carb = 300,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Lettuce",
                            Phe = 5500,
                            Protein = 140
                        },
                        new
                        {
                            ProductId = 12,
                            Calories = 26300,
                            Carb = 1500,
                            Category = "Protein Foods",
                            Fat = 1600,
                            Name = "Chicken Breast",
                            Phe = 52500,
                            Protein = 1470
                        },
                        new
                        {
                            ProductId = 13,
                            Calories = 40300,
                            Carb = 100,
                            Category = "Dairy",
                            Fat = 3300,
                            Name = "Cheddar Cheese",
                            Phe = 131100,
                            Protein = 2500
                        },
                        new
                        {
                            ProductId = 14,
                            Calories = 16000,
                            Carb = 900,
                            Category = "Fruits",
                            Fat = 1500,
                            Name = "Avocados",
                            Phe = 9700,
                            Protein = 200
                        },
                        new
                        {
                            ProductId = 15,
                            Calories = 3400,
                            Carb = 700,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Broccoli",
                            Phe = 11700,
                            Protein = 280
                        },
                        new
                        {
                            ProductId = 16,
                            Calories = 1200,
                            Carb = 200,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Cucumber",
                            Phe = 3100,
                            Protein = 60
                        },
                        new
                        {
                            ProductId = 17,
                            Calories = 88400,
                            Carb = 0,
                            Category = "Other",
                            Fat = 10000,
                            Name = "Olive",
                            Phe = 0,
                            Protein = 0
                        },
                        new
                        {
                            ProductId = 18,
                            Calories = 0,
                            Carb = 0,
                            Category = "Drinks",
                            Fat = 0,
                            Name = "Water",
                            Phe = 0,
                            Protein = 0
                        },
                        new
                        {
                            ProductId = 19,
                            Calories = 4700,
                            Carb = 120,
                            Category = "Drinks",
                            Fat = 0,
                            Name = "Apple Juice",
                            Phe = 100,
                            Protein = 10
                        },
                        new
                        {
                            ProductId = 20,
                            Calories = 4500,
                            Carb = 1000,
                            Category = "Drinks",
                            Fat = 0,
                            Name = "Orange Juice",
                            Phe = 900,
                            Protein = 70
                        },
                        new
                        {
                            ProductId = 21,
                            Calories = 6300,
                            Carb = 700,
                            Category = "Dairy",
                            Fat = 200,
                            Name = "Yogurt",
                            Phe = 28600,
                            Protein = 530
                        },
                        new
                        {
                            ProductId = 22,
                            Calories = 71700,
                            Carb = 0,
                            Category = "Dairy",
                            Fat = 8100,
                            Name = "Butter",
                            Phe = 4100,
                            Protein = 90
                        },
                        new
                        {
                            ProductId = 23,
                            Calories = 13000,
                            Carb = 2400,
                            Category = "Grains",
                            Fat = 200,
                            Name = "Pasta",
                            Phe = 28200,
                            Protein = 530
                        },
                        new
                        {
                            ProductId = 24,
                            Calories = 40600,
                            Carb = 4600,
                            Category = "Grains",
                            Fat = 2100,
                            Name = "Croissant",
                            Phe = 41600,
                            Protein = 820
                        },
                        new
                        {
                            ProductId = 25,
                            Calories = 23800,
                            Carb = 200,
                            Category = "Protein Foods",
                            Fat = 1900,
                            Name = "Salami",
                            Phe = 45100,
                            Protein = 1420
                        },
                        new
                        {
                            ProductId = 26,
                            Calories = 35900,
                            Carb = 0,
                            Category = "Protein Foods",
                            Fat = 2900,
                            Name = "Lamb",
                            Phe = 86000,
                            Protein = 2200
                        },
                        new
                        {
                            ProductId = 27,
                            Calories = 19800,
                            Carb = 0,
                            Category = "Protein Foods",
                            Fat = 800,
                            Name = "Tuna",
                            Phe = 1137,
                            Protein = 2910
                        },
                        new
                        {
                            ProductId = 28,
                            Calories = 14500,
                            Carb = 400,
                            Category = "Protein Foods",
                            Fat = 900,
                            Name = "Tofu",
                            Phe = 76800,
                            Protein = 1600
                        },
                        new
                        {
                            ProductId = 29,
                            Calories = 23700,
                            Carb = 0,
                            Category = "Protein Foods",
                            Fat = 1200,
                            Name = "Beff",
                            Phe = 119000,
                            Protein = 3040
                        },
                        new
                        {
                            ProductId = 30,
                            Calories = 63200,
                            Carb = 0,
                            Category = "Protein Foods",
                            Fat = 6600,
                            Name = "Pork",
                            Phe = 38400,
                            Protein = 930
                        },
                        new
                        {
                            ProductId = 31,
                            Calories = 4100,
                            Carb = 1000,
                            Category = "Drinks",
                            Fat = 0,
                            Name = "Cola",
                            Phe = 0,
                            Protein = 0
                        },
                        new
                        {
                            ProductId = 32,
                            Calories = 3900,
                            Carb = 950,
                            Category = "Drinks",
                            Fat = 0,
                            Name = "Sprite",
                            Phe = 0,
                            Protein = 0
                        },
                        new
                        {
                            ProductId = 33,
                            Calories = 28000,
                            Carb = 3900,
                            Category = "Snacks",
                            Fat = 1200,
                            Name = "Fries",
                            Phe = 14600,
                            Protein = 320
                        },
                        new
                        {
                            ProductId = 34,
                            Calories = 29500,
                            Carb = 4100,
                            Category = "Snacks",
                            Fat = 1800,
                            Name = "Chips",
                            Phe = 17600,
                            Protein = 300
                        },
                        new
                        {
                            ProductId = 35,
                            Calories = 59900,
                            Carb = 1500,
                            Category = "Snacks",
                            Fat = 5300,
                            Name = "Roasted Peanuts",
                            Phe = 142700,
                            Protein = 2800
                        },
                        new
                        {
                            ProductId = 36,
                            Calories = 49600,
                            Carb = 5800,
                            Category = "Snacks",
                            Fat = 2700,
                            Name = "Potato Chips",
                            Phe = 38800,
                            Protein = 850
                        },
                        new
                        {
                            ProductId = 37,
                            Calories = 49200,
                            Carb = 6400,
                            Category = "Snacks",
                            Fat = 2300,
                            Name = "Crackers",
                            Phe = 33000,
                            Protein = 720
                        },
                        new
                        {
                            ProductId = 38,
                            Calories = 29100,
                            Carb = 3200,
                            Category = "Dishes",
                            Fat = 1300,
                            Name = "Pepperoni Pizza",
                            Phe = 61200,
                            Protein = 1220
                        },
                        new
                        {
                            ProductId = 39,
                            Calories = 26600,
                            Carb = 3300,
                            Category = "Dishes",
                            Fat = 1000,
                            Name = "Cheese Pizza",
                            Phe = 66400,
                            Protein = 1150
                        },
                        new
                        {
                            ProductId = 40,
                            Calories = 28600,
                            Carb = 2400,
                            Category = "Dishes",
                            Fat = 1500,
                            Name = "Cheeseburger",
                            Phe = 66000,
                            Protein = 1460
                        },
                        new
                        {
                            ProductId = 41,
                            Calories = 26100,
                            Carb = 2700,
                            Category = "Dishes",
                            Fat = 1100,
                            Name = "Hamburger",
                            Phe = 62400,
                            Protein = 1490
                        },
                        new
                        {
                            ProductId = 42,
                            Calories = 13500,
                            Carb = 1500,
                            Category = "Dishes",
                            Fat = 500,
                            Name = "Lasagne",
                            Phe = 32900,
                            Protein = 730
                        },
                        new
                        {
                            ProductId = 43,
                            Calories = 24700,
                            Carb = 1800,
                            Category = "Dishes",
                            Fat = 1500,
                            Name = "Hotdog",
                            Phe = 41700,
                            Protein = 1060
                        },
                        new
                        {
                            ProductId = 44,
                            Calories = 11200,
                            Carb = 2600,
                            Category = "Other",
                            Fat = 0,
                            Name = "Ketchup",
                            Phe = 2600,
                            Protein = 130
                        },
                        new
                        {
                            ProductId = 45,
                            Calories = 6700,
                            Carb = 500,
                            Category = "Other",
                            Fat = 400,
                            Name = "Mustard",
                            Phe = 16700,
                            Protein = 440
                        },
                        new
                        {
                            ProductId = 46,
                            Calories = 72100,
                            Carb = 0,
                            Category = "Other",
                            Fat = 7900,
                            Name = "Mayonnaise",
                            Phe = 15400,
                            Protein = 100
                        },
                        new
                        {
                            ProductId = 47,
                            Calories = 0,
                            Carb = 0,
                            Category = "Other",
                            Fat = 0,
                            Name = "Salt",
                            Phe = 0,
                            Protein = 0
                        },
                        new
                        {
                            ProductId = 48,
                            Calories = 3100,
                            Carb = 600,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Red Pepper",
                            Phe = 3300,
                            Protein = 100
                        },
                        new
                        {
                            ProductId = 49,
                            Calories = 26300,
                            Carb = 200,
                            Category = "Protein Foods",
                            Fat = 2100,
                            Name = "Ham",
                            Phe = 64100,
                            Protein = 1630
                        },
                        new
                        {
                            ProductId = 50,
                            Calories = 4000,
                            Carb = 900,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Onions",
                            Phe = 2500,
                            Protein = 110
                        },
                        new
                        {
                            ProductId = 101,
                            Calories = 4900,
                            Carb = 1200,
                            Category = "Frutis",
                            Fat = 100,
                            Name = "Raspberries",
                            Phe = 3000,
                            Protein = 90,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            ProductId = 102,
                            Calories = 6700,
                            Carb = 1700,
                            Category = "Frutis",
                            Fat = 0,
                            Name = "Grapes",
                            Phe = 1300,
                            Protein = 60,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            ProductId = 103,
                            Calories = 4300,
                            Carb = 1100,
                            Category = "Drinks",
                            Fat = 0,
                            Name = "Fanta",
                            Phe = 0,
                            Protein = 0,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            ProductId = 104,
                            Calories = 18000,
                            Carb = 600,
                            Category = "Dishes",
                            Fat = 600,
                            Name = "Meatballs",
                            Phe = 14800,
                            Protein = 1100,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            ProductId = 105,
                            Calories = 4100,
                            Carb = 1000,
                            Category = "Vegetables",
                            Fat = 0,
                            Name = "Carrots",
                            Phe = 6100,
                            Protein = 90,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            ProductId = 106,
                            Calories = 3700,
                            Carb = 800,
                            Category = "Other",
                            Fat = 0,
                            Name = "Enoki",
                            Phe = 1500,
                            Protein = 270,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            ProductId = 107,
                            Calories = 30000,
                            Carb = 0,
                            Category = "Dairy",
                            Fat = 2400,
                            Name = "Camembert",
                            Phe = 110500,
                            Protein = 1980,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.TrackedValue", b =>
                {
                    b.Property<int>("TrackedValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("TrackedValueId");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("TrackedValues");

                    b.HasData(
                        new
                        {
                            TrackedValueId = 1,
                            Date = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 980
                        },
                        new
                        {
                            TrackedValueId = 2,
                            Date = new DateTime(2021, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 960
                        },
                        new
                        {
                            TrackedValueId = 3,
                            Date = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 930
                        },
                        new
                        {
                            TrackedValueId = 4,
                            Date = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 970
                        },
                        new
                        {
                            TrackedValueId = 5,
                            Date = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 900
                        },
                        new
                        {
                            TrackedValueId = 6,
                            Date = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 880
                        },
                        new
                        {
                            TrackedValueId = 7,
                            Date = new DateTime(2021, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 930
                        },
                        new
                        {
                            TrackedValueId = 8,
                            Date = new DateTime(2021, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 900
                        },
                        new
                        {
                            TrackedValueId = 9,
                            Date = new DateTime(2021, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 870
                        },
                        new
                        {
                            TrackedValueId = 10,
                            Date = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 2,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 850
                        },
                        new
                        {
                            TrackedValueId = 101,
                            Date = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10600
                        },
                        new
                        {
                            TrackedValueId = 102,
                            Date = new DateTime(2021, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 1060
                        },
                        new
                        {
                            TrackedValueId = 103,
                            Date = new DateTime(2021, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10690
                        },
                        new
                        {
                            TrackedValueId = 104,
                            Date = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10720
                        },
                        new
                        {
                            TrackedValueId = 105,
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10700
                        },
                        new
                        {
                            TrackedValueId = 106,
                            Date = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10710
                        },
                        new
                        {
                            TrackedValueId = 107,
                            Date = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10740
                        },
                        new
                        {
                            TrackedValueId = 108,
                            Date = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10750
                        },
                        new
                        {
                            TrackedValueId = 109,
                            Date = new DateTime(2021, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10800
                        },
                        new
                        {
                            TrackedValueId = 110,
                            Date = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            Value = 10870
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "d318a720-1017-4703-98cf-44954069d6e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "609b4c61-4692-4ecd-b98d-46b81333a8f7",
                            Email = "a@a",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "Admin",
                            NormalizedEmail = "A@A",
                            NormalizedUserName = "A@A",
                            PasswordHash = "AQAAAAEAACcQAAAAEA893zwSsGryjix4cyQ1GWUYZYDmUaCIcM9prUrEzX6vcbOY/SXL3iYtE25uyQ2c3A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b34e598-6d42-4314-a9f3-63b0e25cec3a",
                            TwoFactorEnabled = false,
                            UserName = "a@a"
                        },
                        new
                        {
                            Id = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb978aeb-ecdb-4b32-9d37-2221a0fbbc2f",
                            Email = "u@u",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "User",
                            NormalizedEmail = "U@U",
                            NormalizedUserName = "U@U",
                            PasswordHash = "AQAAAAEAACcQAAAAEJlUo9wvMe6ra4R8UaEqKpChDGWvu8bATSEUPz0g7M5VqzcWhFkpB0LsUigjGb0dew==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "50432f4f-a832-4476-bb5a-d12c4952e658",
                            TwoFactorEnabled = false,
                            UserName = "u@u"
                        },
                        new
                        {
                            Id = "46ad44f4-c682-4c31-8f04-b364d516a8ed",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "802287bb-6ea6-46eb-bb07-b588d17a2004",
                            Email = "u@u2",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "User2",
                            NormalizedEmail = "U@U2",
                            NormalizedUserName = "U@U2",
                            PasswordHash = "AQAAAAEAACcQAAAAEM5YTh8KHe8s0qhj4I2Btz1AQnryzhEt5U3TeQNHHG+sh06WsDo/EY6FVcjTZGH6KQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7f12804a-0159-4935-acb9-762eb110ad3e",
                            TwoFactorEnabled = false,
                            UserName = "u@u2"
                        },
                        new
                        {
                            Id = "b40c12be-c3bc-4765-80ca-2f637e603f8a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a1f4a09-aea6-46a6-bcf7-3c27a7e9e4e8",
                            Email = "u@u3",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Name = "User3",
                            NormalizedEmail = "U@U3",
                            NormalizedUserName = "U@U3",
                            PasswordHash = "AQAAAAEAACcQAAAAELrRe44FszsWRdqfv3FXE+swTbUgxDlvoENqh5GEYhLHGlU6cMi417Pnkb0P25TVBg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d4a375db-bc11-423b-89a7-abc40450ba61",
                            TwoFactorEnabled = false,
                            UserName = "u@u3"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserDailyLimits", b =>
                {
                    b.Property<int>("UserDailyLimitsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddCalories")
                        .HasColumnType("bit");

                    b.Property<int>("CaloriesLimit")
                        .HasColumnType("int");

                    b.Property<int>("CarbLimit")
                        .HasColumnType("int");

                    b.Property<int>("FatLimit")
                        .HasColumnType("int");

                    b.Property<int>("PheLimit")
                        .HasColumnType("int");

                    b.Property<int>("ProteinLimit")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserDailyLimitsId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("UserDailyLimits");

                    b.HasData(
                        new
                        {
                            UserDailyLimitsId = 1,
                            AddCalories = true,
                            CaloriesLimit = 240000,
                            CarbLimit = 15000,
                            FatLimit = 12000,
                            PheLimit = 100000,
                            ProteinLimit = 16000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserDailyLimitsId = 2,
                            AddCalories = false,
                            CaloriesLimit = 0,
                            CarbLimit = 0,
                            FatLimit = 0,
                            PheLimit = 0,
                            ProteinLimit = 0,
                            UserId = "46ad44f4-c682-4c31-8f04-b364d516a8ed"
                        },
                        new
                        {
                            UserDailyLimitsId = 3,
                            AddCalories = false,
                            CaloriesLimit = 0,
                            CarbLimit = 0,
                            FatLimit = 0,
                            PheLimit = 0,
                            ProteinLimit = 0,
                            UserId = "b40c12be-c3bc-4765-80ca-2f637e603f8a"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserExercise", b =>
                {
                    b.Property<int>("UserExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserExercises");

                    b.HasData(
                        new
                        {
                            UserExerciseId = 1,
                            Date = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 1,
                            Time = 3000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 2,
                            Date = new DateTime(2021, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 2,
                            Time = 4500,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 3,
                            Date = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 3,
                            Time = 9000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 4,
                            Date = new DateTime(2021, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 1,
                            Time = 6000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 5,
                            Date = new DateTime(2021, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 2,
                            Time = 6000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 6,
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 28,
                            Time = 9000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 7,
                            Date = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 3,
                            Time = 4500,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 8,
                            Date = new DateTime(2021, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 3,
                            Time = 4500,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 9,
                            Date = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 8,
                            Time = 12000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 10,
                            Date = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 8,
                            Time = 4000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 11,
                            Date = new DateTime(2021, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 2,
                            Time = 4500,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 12,
                            Date = new DateTime(2021, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 28,
                            Time = 10000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 13,
                            Date = new DateTime(2021, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 1,
                            Time = 10000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 14,
                            Date = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 2,
                            Time = 8000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 15,
                            Date = new DateTime(2021, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 28,
                            Time = 10000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 16,
                            Date = new DateTime(2021, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 1,
                            Time = 10000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserExerciseId = 17,
                            Date = new DateTime(2021, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 2,
                            Time = 8000,
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserMedicine", b =>
                {
                    b.Property<int>("UserMedicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Carb")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<int>("Phe")
                        .HasColumnType("int");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserMedicineId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMedicines");

                    b.HasData(
                        new
                        {
                            UserMedicineId = 1,
                            Calories = 5200,
                            Carb = 3400,
                            Fat = 1800,
                            Phe = 1200,
                            Protein = 3000,
                            StartDate = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserMedicineId = 2,
                            Calories = 5000,
                            Carb = 3800,
                            EndDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 1700,
                            Phe = 1500,
                            Protein = 3400,
                            StartDate = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserMedicineId = 3,
                            Calories = 5300,
                            Carb = 3500,
                            EndDate = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 1900,
                            Phe = 1100,
                            Protein = 3200,
                            StartDate = new DateTime(2021, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserMedicineId = 22,
                            Calories = 4200,
                            Carb = 4400,
                            Fat = 2800,
                            Phe = 1000,
                            Protein = 3600,
                            StartDate = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserOffAlert", b =>
                {
                    b.Property<int>("UserOffAlertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserOffAlertId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOffAlerts");

                    b.HasData(
                        new
                        {
                            UserOffAlertId = 1,
                            Date = new DateTime(2021, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        },
                        new
                        {
                            UserOffAlertId = 2,
                            Date = new DateTime(2021, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957"
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserProductDish", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("UserProductDish");

                    b.HasData(
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 1,
                            Weight = 15000
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 101,
                            Weight = 5000
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 5,
                            Weight = 10000
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 14,
                            Weight = 7500
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 102,
                            Weight = 5000
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserProductFav", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("UserProductFavs");

                    b.HasData(
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 1
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 105
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 8
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 12
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 103
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 47
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 32
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 4
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 17
                        });
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserProductLastAdded", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("UserProductLastAddeds");

                    b.HasData(
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 1,
                            Order = 0
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 101,
                            Order = 0
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 10,
                            Order = 0
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 11,
                            Order = 0
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 34,
                            Order = 0
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 41,
                            Order = 0
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 103,
                            Order = 0
                        },
                        new
                        {
                            UserId = "483f0b30-9dbf-4fc0-b66a-4bc1642c4957",
                            ProductId = 106,
                            Order = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PKUAppAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PKUAppAPI.Models.Meal", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("Meals")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.MealProduct", b =>
                {
                    b.HasOne("PKUAppAPI.Models.Meal", "Meal")
                        .WithMany("MealProducts")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PKUAppAPI.Models.Product", "Product")
                        .WithMany("MealProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PKUAppAPI.Models.Product", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.TrackedValue", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("TrackedValues")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserDailyLimits", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithOne("DailyLimits")
                        .HasForeignKey("PKUAppAPI.Models.UserDailyLimits", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserExercise", b =>
                {
                    b.HasOne("PKUAppAPI.Models.Exercise", "Exercise")
                        .WithMany("UserExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("UserExercises")
                        .HasForeignKey("UserId");

                    b.Navigation("Exercise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserMedicine", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("UserMedicines")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserOffAlert", b =>
                {
                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("UserOffAlerts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserProductDish", b =>
                {
                    b.HasOne("PKUAppAPI.Models.Product", "Product")
                        .WithMany("UserProductDish")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("UserProductDish")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserProductFav", b =>
                {
                    b.HasOne("PKUAppAPI.Models.Product", "Product")
                        .WithMany("UserProductFavs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("UserProductFavs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.UserProductLastAdded", b =>
                {
                    b.HasOne("PKUAppAPI.Models.Product", "Product")
                        .WithMany("UserProductLastAddeds")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PKUAppAPI.Models.User", "User")
                        .WithMany("UserProductLastAddeds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PKUAppAPI.Models.Exercise", b =>
                {
                    b.Navigation("UserExercises");
                });

            modelBuilder.Entity("PKUAppAPI.Models.Meal", b =>
                {
                    b.Navigation("MealProducts");
                });

            modelBuilder.Entity("PKUAppAPI.Models.Product", b =>
                {
                    b.Navigation("MealProducts");

                    b.Navigation("UserProductDish");

                    b.Navigation("UserProductFavs");

                    b.Navigation("UserProductLastAddeds");
                });

            modelBuilder.Entity("PKUAppAPI.Models.User", b =>
                {
                    b.Navigation("DailyLimits");

                    b.Navigation("Meals");

                    b.Navigation("Products");

                    b.Navigation("TrackedValues");

                    b.Navigation("UserExercises");

                    b.Navigation("UserMedicines");

                    b.Navigation("UserOffAlerts");

                    b.Navigation("UserProductDish");

                    b.Navigation("UserProductFavs");

                    b.Navigation("UserProductLastAddeds");
                });
#pragma warning restore 612, 618
        }
    }
}
